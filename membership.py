import numpy as np
def getMF ():
    input_feature_top = [#b mean
            [0.00000000000000000,0.02827400000000,0.056547,0.6000000],
            [0.04241000000000000,0.07068400000000,0.113094,0.1272310,0.75],
            [0.11309400000000000,0.12723100000000,0.300000,1.0000000]
        ], [ #d
            [0.0000000000000,0.120000000000,0.180000000000,1.00000000000],
            [0.1249726096010,0.249945219201,0.749835657604,0.909780876805,0.7],
            [0.8498356576040,0.999780876805,3.000000000000,1.000000000000]
        ], [            #diff
            [-100.00000000,-0.325475691512,4.25438470758,1],
            [1.25438470758,7.2543847075800,14.8342451067,22.4141055058,0.8],
            [14.8342451067,29.993965904900,80.0000000000,1]
        ]
    input_feature_low = [#b
            [0.000000000,0.02827400000000,0.04241000000000,0.400000000000],
            [0.056547000,0.07068400000000,0.11309400000000,0.113094000000,0.3],
            [0.127231000,0.12723100000000,0.30000000000000,1.000000000000]
        ],[#d
            [0.0000000000000000,0.120000000000,0.12497260960100000000000,0.60000000000],
            [0.1800000000000000,0.249945219201,0.74983565760400000000000,0.849835657604,0.5],
            [0.9097808768050000,0.999780876805,3.00000000000000000000000,1]
        ], [ #diff
            [-100.00000000000000,-0.32547569151200,1.254384707580000000,1],
            [4.25438470758000000,7.254384707580000,14.83424510670000000,14.8342451067,0.6],
            [22.4141055058000000,29.99396590490000,80.00000000000000000,1]
        ]
    n_rule = []
    for i in range(0,len(input_feature_top)) : 
        n_rule.append(len(input_feature_top[i]))
    return input_feature_top, input_feature_low, len(input_feature_top), n_rule
def getOutput (): 
    output_feature_top = [
        [0      , 0.175 , 0.5  , 1],
        [0.2    , 0.4   ,0.6   , 0.8  , 1],
        [0.5    , 0.9   , 1    , 1]
    ]
    output_feature_low = [
        [0, 0.175, 0.325, 0.8],
        [0.325, 0.4, 0.6,0.75, 0.8],
        [0.625, 0.9, 1, 0.8]
    ]
    return output_feature_top, output_feature_low
def getRule () :
    rule_feature = [
        [0,0,0,0],
        [0,0,1,0],
        [0,1,0,0],
        [0,1,1,0],
        [0,1,2,0],
        [0,2,0,0],
        [0,2,1,0],
        [0,2,2,0],
        [1,1,0,0],
        [1,1,1,0],
        [1,1,2,0],
        [1,2,0,0],
        [1,2,1,0],
        [1,2,2,0],
        [2,1,0,0],
        [2,1,1,0],
        [2,1,2,0],
        [2,2,0,0],
        [2,2,1,0],
        [2,2,2,0]
    ]

    return rule_feature, len(rule_feature)